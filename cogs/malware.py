from OTXv2 import OTXv2
import argparse
import get_malicious
import hashlib
import requests
import json
from discord import Embed
# Your API key
API_KEY = '75ba4a2b23d77731e9890a9d1b548f4d99f80d132739c74c0d12af7839c2e02d'
OTX_SERVER = 'https://otx.alienvault.com/'
otx = OTXv2(API_KEY, server=OTX_SERVER)

parser = argparse.ArgumentParser(description='OTX CLI Example')
parser.add_argument('-ip', help='IP eg; 4.4.4.4', required=False)
parser.add_argument('-host',
                    help='Hostname eg; www.alienvault.com', required=False)
parser.add_argument(
    '-url', help='URL eg; http://www.alienvault.com', required=False)
parser.add_argument(
    '-hash', help='Hash of a file eg; 7b42b35832855ab4ff37ae9b8fa9e571', required=False)
parser.add_argument(
    '-file', help='Path to a file, eg; malware.exe', required=False)

args = vars(parser.parse_args())




def mal(u):  
    url = 'https://www.virustotal.com/vtapi/v2/url/report'
    params = {'apikey': 'c3ce7f072f8dd8effbf9f8c0e37f75f2aabdc7e197ed49051757bf0d0d0301db', 'resource':f'{u}'}
    
    response = requests.get(url, params=params)
    d=response.json()
    dreq=d['scans']
    #print(response.json())
    #print(d['response_code'])
    #print(d)
    if(d['response_code']==0):
       alerts = get_malicious.url(otx,u)
       if len(alerts) > 0:
           emb = Embed(color=0xff0400)
           emb.title='Identified as potentially malicious'
           emb.set_footer(text="Powered by Alienware OTX",icon_url='https://imgur.com/a/FnskW4D')
           return(emb)
          # print(str(alerts))
       else:
           print('Not identified as malicious')
           emb = Embed(color=0x00ff1e)
           emb.title='Not identified as malicious'
           emb.set_footer(text="Powered by Alienware OTX",icon_url='https://imgur.com/a/FnskW4D')
           return(emb)
    else:
        k=0
        if(len(dreq)>6):
            ep=6
        else:
            ep=len(dreq)

        point=len(dreq)
        p1=point
        pb=''
        
        for i in dreq:
            k=k+1
            #print(i)
            if(k!=ep):
                if(str(dreq[i]['result']).count('clean site')>0):
                    point=point+0
                else:
                    point=point-1
                pb=pb+dreq[i]+' '
            else:
                break
        if(point==p1):
            print("Safe website")
            emb=Embed(color=0x00ff1e)
            emb.title='Safe website'
            emb.set_footer(text='Powered by '+pb)
            return(emb)
        else:
            print("Website has high chances of being malicious")
            emb=Embed(color=0xff0400)
            emb.title='Website has high chances of being malicious'
            emb.set_footer(text='Powered by '+pb)
            return(emb)
#d=mal('https://www.virustotal.com/vtapi/v2/url/report')
#print(d)
#print()
#for i in d:
#    print(i,d[i]['result'])