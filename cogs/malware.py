from OTXv2 import OTXv2
import argparse
from cogs import get_malicious
import hashlib
import requests 

# Your API key
API_KEY = '75ba4a2b23d77731e9890a9d1b548f4d99f80d132739c74c0d12af7839c2e02d'
OTX_SERVER = 'https://otx.alienvault.com/'
otx = OTXv2(API_KEY, server=OTX_SERVER)

parser = argparse.ArgumentParser(description='OTX CLI Example')
parser.add_argument('-ip', help='IP eg; 4.4.4.4', required=False)
parser.add_argument('-host',
                    help='Hostname eg; www.alienvault.com', required=False)
parser.add_argument(
    '-url', help='URL eg; http://www.alienvault.com', required=False)
parser.add_argument(
    '-hash', help='Hash of a file eg; 7b42b35832855ab4ff37ae9b8fa9e571', required=False)
parser.add_argument(
    '-file', help='Path to a file, eg; malware.exe', required=False)

args = vars(parser.parse_args())



def mal(u):  
    url = 'https://www.virustotal.com/vtapi/v2/url/report'
    params = {'apikey': 'c3ce7f072f8dd8effbf9f8c0e37f75f2aabdc7e197ed49051757bf0d0d0301db', 'resource':f'{u}'}
    
    response = requests.get(url, params=params)
    d=response.json()
    
    #print(response.json())
    print(d['response_code'])

    if(d['response_code']==0):
       alerts = get_malicious.url(otx,u)
       if len(alerts) > 0:
           return('Identified as potentially malicious')
           print(str(alerts))
       else:
           print('Not identified as malicious')
       return('Not identified as malicious')
    else:
        return(d['scans'])

print(mal('https://www.virustotal.com/vtapi/v2/url/report'))
print()